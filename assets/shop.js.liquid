/*!
 * enquire.js v2.1.2 - Awesome Media Queries in JavaScript
 * Copyright (c) 2014 Nick Williams - http://wicky.nillia.ms/enquire.js
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */
!function(a,b,c){var d=window.matchMedia;"undefined"!=typeof module&&module.timberrts?module.timberrts=c(d):"function"==typeof define&&define.amd?define(function(){return b[a]=c(d)}):b[a]=c(d)}("enquire",this,function(a){"use strict";function b(a,b){var c,d=0,e=a.length;for(d;e>d&&(c=b(a[d],d),c!==!1);d++);}function c(a){return"[object Array]"===Object.prototype.toString.apply(a)}function d(a){return"function"==typeof a}function e(a){this.options=a,!a.deferSetup&&this.setup()}function f(b,c){this.query=b,this.isUnconditional=c,this.handlers=[],this.mql=a(b);var d=this;this.listener=function(a){d.mql=a,d.assess()},this.mql.addListener(this.listener)}function g(){if(!a)throw new Error("matchMedia not present, legacy browsers require a polyfill");this.queries={},this.browserIsIncapable=!a("only all").matches}return e.prototype={setup:function(){this.options.setup&&this.options.setup(),this.initialised=!0},on:function(){!this.initialised&&this.setup(),this.options.match&&this.options.match()},off:function(){this.options.unmatch&&this.options.unmatch()},destroy:function(){this.options.destroy?this.options.destroy():this.off()},equals:function(a){return this.options===a||this.options.match===a}},f.prototype={addHandler:function(a){var b=new e(a);this.handlers.push(b),this.matches()&&b.on()},removeHandler:function(a){var c=this.handlers;b(c,function(b,d){return b.equals(a)?(b.destroy(),!c.splice(d,1)):void 0})},matches:function(){return this.mql.matches||this.isUnconditional},clear:function(){b(this.handlers,function(a){a.destroy()}),this.mql.removeListener(this.listener),this.handlers.length=0},assess:function(){var a=this.matches()?"on":"off";b(this.handlers,function(b){b[a]()})}},g.prototype={register:function(a,e,g){var h=this.queries,i=g&&this.browserIsIncapable;return h[a]||(h[a]=new f(a,i)),d(e)&&(e={match:e}),c(e)||(e=[e]),b(e,function(b){d(b)&&(b={match:b}),h[a].addHandler(b)}),this},unregister:function(a,b){var c=this.queries[a];return c&&(b?c.removeHandler(b):(c.clear(),delete this.queries[a])),this}},new g});

/* Simple jQuery Equal Heights @version 1.5.1. Copyright (c) 2013 Matt Banks. Dual licensed under the MIT and GPL licenses. */
!function(a){a.fn.equalHeights=function(){var b=0,c=a(this);return c.each(function(){var c=a(this).innerHeight();c>b&&(b=c)}),c.css("height",b)},a("[data-equal]").each(function(){var b=a(this),c=b.data("equal");b.find(c).equalHeights()})}(jQuery);

/* Run function after window resize */
var afterResize=(function(){var t={};return function(callback,ms,uniqueId){if(!uniqueId){uniqueId="Don't call this twice without a uniqueId";}if(t[uniqueId]){clearTimeout(t[uniqueId]);}t[uniqueId]=setTimeout(callback,ms);};})();

window.timber = window.timber || {};

timber.cacheSelectors = function () {
  timber.cache = {
    // General
    $html: $('html'),
    $body: $('body'),
    // $breadcrumbs: $('.breadcrumb'),

    // Navigation

    // $navigation: $('#accessibleNav'),
    // $hasDropdownItem: $('.site-nav--has-dropdown'),
    // $menuToggle: $('.menu-toggle'),

    // Home Page
    // $slider: $('.flexslider'),

    // Product Page
    $productImageWrap: $('#productPhoto'),
    $productImage: $('#productPhotoImg'),
    $thumbImages: $('#productThumbs').find('a.product-photo-thumb'),
    $shareButtons: $('.social-sharing'),

    // Collection Pages
    //$collectionFilters: $('#collectionFilters'),
    //$toggleFilterBtn: $('#toggleFilters'),
    $advancedFilters: $('.advanced-filters'),

    //sidebar
    $sidebarDropdown: $('.sidebar-sublist'),
    $sidebarDropdownExpand: $('.sidebar-sublist__expand'),
    $sidebarDropdownContract: $('.sidebar-sublist__contract'),
    $sidebarSubLists: $('.sidebar-sublist__content'),

    $sidebarViewMore: $('.sidebar-module__viewmore')

    // Equal height elements
    // $featuredBoxes: $('.featured-box'),
    // $featuredImages: $('.featured-box--image'),
    //$productGridImages: $('.product-grid-image')


  };
};



timber.cacheVariables = function () {
  timber.vars = {
    // Breakpoints (from timber.scss.liquid)
    bpLarge: 769,

    // MediaQueries (from timber.scss.liquid)
    mediaQueryLarge     : 'screen and (min-width: 769px)',
    isLargeBp : false,
    isTouch: timber.cache.$html.hasClass('supports-touch')
  }
};

timber.init = function () {
  timber.cacheSelectors();
  timber.cacheVariables();

  timber.cache.$html.removeClass('no-js').addClass('js');
  if ('ontouchstart' in window) {
    timber.cache.$html.removeClass('no-touch').addClass('touch');
  }

  timber.productImageSwitch();
  timber.responsiveVideos();
  
  timber.sidebarViewMore();
  timber.sidebarDropdowns();
  timber.sidebarDropdownCheck();


  timber.initBreakpoints();

  {% if settings.social_sharing_products or settings.social_sharing_blog %}
  timber.socialSharing();
  {% endif %}

  {% if settings.collection_sidebar_filters == 'groups' %}
  timber.sortFilters();
  {% endif %}
};

timber.initBreakpoints = function () {
  enquire.register(timber.vars.mediaQueryLarge, {
    match: function () {
      
      timber.vars.isLargeBp = true;
      timber.productImageZoom();
    },
    unmatch: function () {
      
      timber.vars.isLargeBp = false;
      timber.productImageZoom();
    }
  });
};

timber.sidebarViewMore = function () {
  if (!timber.cache.$sidebarViewMore.length) {
    return;
  }

  timber.cache.$sidebarViewMore.on('click', function() {
    $(this).prev('.sidebar-module__list').toggleClass('sidebar-module__list--expand');
  });
};

timber.sidebarDropdowns = function () {
  if (!timber.cache.$sidebarDropdown.length) {
    return;
  }

  timber.cache.$sidebarDropdownExpand.on('click', function() {
    $(this).closest('.sidebar-sublist').addClass('is-open');
  });

  timber.cache.$sidebarDropdownContract.on('click', function() {
    $(this).closest('.sidebar-sublist').removeClass('is-open');
  });

};

timber.sidebarDropdownCheck = function () {
  if (!timber.cache.$sidebarSubLists.length) {
    return;
  }

  timber.cache.$sidebarSubLists.each(function() {
    var $el = $(this);
    if ($el.find('.is-active').length) {
      $el.parent('.sidebar-sublist').addClass('is-open');
    }
  });

};

//unused


timber.equalHeights = function () {
  $(window).load(function() {
    resizeElements();
  });

  $(window).resize(function() {
    afterResize(function() {
      resizeElements();
    }, 250, 'id');
  });

  function resizeElements() {
    timber.cache.$featuredImages.css('height', 'auto').equalHeights();
    timber.cache.$featuredBoxes.css('height', 'auto').equalHeights();
  //  timber.cache.$productGridImages.css('height', 'auto').equalHeights();
  }
};



//use

timber.productImageSwitch = function () {
  if ( timber.cache.$thumbImages.length ) {
    // Switch the main image with one of the thumbnails
    // Note: this does not change the variant selected, just the image
    timber.cache.$thumbImages.on('click', function(evt) {
      evt.preventDefault();
      var newImage = $(this).attr('href');
      timber.switchImage(newImage, null, timber.cache.$productImage);
    });
  }
};

timber.switchImage = function (src, imgObject, el) {
  // Make sure element is a jquery object
  var $el = $(el);
  $el.attr('src', src);

  {% if settings.product_image_zoom_enable %}
    // Update new image src to grande
    var zoomSrc = src.replace('_medium.','_1024x1024.').replace('_large.','_1024x1024.');
    $el.attr('data-zoom', zoomSrc);

    timber.productImageZoom();
  {% endif %}
};

timber.productImageZoom = function () {

  
  {% if settings.product_image_zoom_enable %}

    if (!timber.cache.$productImageWrap.length) {
      return;
    };

    // Destroy zoom (in case it was already set), then set it up again
    timber.cache.$productImageWrap.trigger('zoom.destroy');

    if ( timber.vars.isLargeBp ) {
      timber.cache.$productImageWrap.addClass('image-zoom').zoom({
        url: timber.cache.$productImage.attr('data-zoom')
      });
    }
  {% endif %}
};



timber.socialSharing = function () {
  // General selectors
  var $buttons = timber.cache.$shareButtons,
      $shareLinks = $buttons.find('a'),
      permalink = $buttons.attr('data-permalink');

  // Share button selectors
  var $fbLink = $('.share-facebook'),
      $pinLink = $('.share-pinterest'),
      $googleLink = $('.share-google');

  if ( $fbLink.length ) {
    $.getJSON('https://graph.facebook.com/?id=' + permalink + '&callback=?', function(data) {
      if (data.shares) {
        $fbLink.find('.share-count').text(data.shares).addClass('is-loaded');
      } else {
        $fbLink.find('.share-count').remove();
      }
    });
  };

  if ( $pinLink.length ) {
    $.getJSON('https://api.pinterest.com/v1/urls/count.json?url=' + permalink + '&callback=?', function(data) {
      if (data.count > 0) {
        $pinLink.find('.share-count').text(data.count).addClass('is-loaded');
      } else {
        $pinLink.find('.share-count').remove();
      }
    });
  };

  if ( $googleLink.length ) {
    // Can't currently get Google+ count with JS, so just pretend it loaded
    $googleLink.find('.share-count').addClass('is-loaded');
  }

  // Share popups
  $shareLinks.on('click', function(e) {
    e.preventDefault();
    var el = $(this),
        popup = el.attr('class').replace('-','_'),
        link = el.attr('href'),
        w = 700,
        h = 400;

    // Set popup sizes
    switch (popup) {
      case 'share-fancy':
        w = 480;
        h = 720;
        break;
      case 'share-google':
        w = 500;
        break;
    }

    window.open(link, popup, 'width=' + w + ', height=' + h);
  });
};


timber.responsiveVideos = function () {
  var $iframeVideo = $('iframe[src*="youtube.com/embed"], iframe[src*="player.vimeo"]');
  var $iframeReset = $iframeVideo.add('iframe#admin_bar_iframe');

  $iframeVideo.each(function () {
    // Add wrapper to make video responsive
    $(this).wrap('<div class="video-wrapper"></div>');
  });

  $iframeReset.each(function () {
    // Re-set the src attribute on each iframe after page load
    // for Chrome's "incorrect iFrame content on 'back'" bug.
    // https://code.google.com/p/chromium/issues/detail?id=395791
    // Need to specifically target video and admin bar
    this.src = this.src;
  });
};



timber.sortFilters = function () {
  timber.cache.$advancedFilters.each(function () {
    var $el = $(this),
        $tags = $el.find('li'),
        aNumber = /\d+/,
        sorted = false;
    $tags.sort(function (a, b) {
      a = parseInt( aNumber.exec( $(a).text() ), 10 );
      b = parseInt( aNumber.exec( $(b).text() ), 10 );
      if ( isNaN(a)  || isNaN(b) ) {
        return;
      }
      else {
        sorted = true;
        return a - b;
      }
    });
    if (sorted) {
      $el.append($tags);
    }
  });
};

timber.formatMoney = function (val) {
  {% unless settings.show_dollar_symbol %}
    val = val.replace('$','');
  {% endunless %}

  {% comment %}
    Unless this store uses multiple currencies,
    if we apply a special style to cents,
    we will wrap them in a sup (superscript) element.
  {% endcomment %}

  {% if settings.superscript_decimals %}
    if (moneyFormat.indexOf('money') === -1) {
      if ( (moneyFormat.indexOf({% raw %}'{{amount}}'{% endraw %}) > -1) && (moneyFormat.indexOf('.') === -1) ) {
        val = val.replace('.','<sup>') + '</sup>';
      }
      else if (moneyFormat.indexOf({% raw %}'{{amount_with_comma_separator}}'{% endraw %}) > -1) {
        val = val.replace(',','<sup>') + '</sup>';
      }
    }
  {% endif %}

  return val;
};

timber.formatSaleTag = function (val) {
  // If not using multiple currencies
  if (moneyFormat.indexOf('money') === -1) {
    // If we use amount
    if ( (moneyFormat.indexOf({% raw %}'{{amount}}'{% endraw %}) > -1) && (moneyFormat.indexOf('.') === -1) ) {
      // If there are no cents or money amount is more than 10, remove decimals
      if ( (val.indexOf('.00') > -1) || parseInt(val.replace(/[^0-9]/g, ''), 10) > 1000 ) {
        return val.split('.')[0];
      }
    }
    // If we use amount_with_comma_separator
    else if (moneyFormat.indexOf({% raw %}'{{amount_with_comma_separator}}'{% endraw %}) > -1) {
      // If there are no cents or money amount is more than 10, remove decimals
      if ( (val.indexOf(',00') > -1) || parseInt(val.replace(/[^0-9]/g, ''), 10) > 1000 ) {
        return val.split(',')[0];
      }
    }
  }
  return val;
};

// Initialize Timber's JS on docready
$(timber.init)
